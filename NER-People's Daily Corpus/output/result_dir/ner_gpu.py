# -*- coding: utf-8 -*-
"""NER-GPU.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aBW4A_EKw6hvi6Now_XECzI5OYkyPdkf
"""

from google.colab import drive
drive.mount('/content/drive')

import os
path = "/content/drive/My Drive/bert-chinese-ner"
os.chdir(path)

# Commented out IPython magic to ensure Python compatibility.
# %tensorflow_version 1.x
import tensorflow
print(tensorflow.__version__)

os.environ["CUDA_VISIBLE_DEVICES"]="0"

assert 'COLAB_TPU_ADDR' in os.environ, 'ERROR: Not connected to a TPU runtime; please see the first cell in this notebook for instructions!'
TPU_ADDRESS = 'grpc://' + os.environ['COLAB_TPU_ADDR']
print('TPU address is', TPU_ADDRESS)
# grpc://10.103.121.154:8470

tensorflow.test.is_gpu_available()

try:
  tpu = tensorflow.distribute.cluster_resolver.TPUClusterResolver()  # TPU detection
  print('Running on TPU ', tpu.cluster_spec().as_dict()['worker'])
except ValueError:
  raise BaseException('ERROR: Not connected to a TPU runtime; please see the previous cell in this notebook for instructions!')

tensorflow.config.experimental_connect_to_cluster(tpu)
tensorflow.tpu.experimental.initialize_tpu_system(tpu)
tpu_strategy = tensorflow.distribute.experimental.TPUStrategy(tpu)

!python BERT_NER.py \
				--data_dir=data/ \
				--bert_config_file=checkpoint/bert_config.json \
				--init_checkpoint=checkpoint/bert_model.ckpt \
				--vocab_file=vocab.txt \
				--output_dir=./output/result_dir/

!python BERT_NER.py \
				--data_dir=data/ \
				--bert_config_file=checkpoint/bert_config.json \
				--init_checkpoint=checkpoint/bert_model.ckpt \
				--vocab_file=vocab.txt \
				--output_dir=./output/result_dir/ \
				--do_train=False \
				--do_eval=True \
				--do_predict=True